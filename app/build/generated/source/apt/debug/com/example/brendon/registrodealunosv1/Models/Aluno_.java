
package com.example.brendon.registrodealunosv1.Models;

import com.example.brendon.registrodealunosv1.Models.AlunoCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;


// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Aluno". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Aluno_ implements EntityInfo<Aluno> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Aluno";

    public static final int __ENTITY_ID = 2;

    public static final Class<Aluno> __ENTITY_CLASS = Aluno.class;

    public static final String __DB_NAME = "Aluno";

    public static final CursorFactory<Aluno> __CURSOR_FACTORY = new Factory();

    @Internal
    static final AlunoIdGetter __ID_GETTER = new AlunoIdGetter();

    public final static Aluno_ __INSTANCE = new Aluno_();

    public final static io.objectbox.Property<Aluno> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Aluno> nome =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, String.class, "nome");

    public final static io.objectbox.Property<Aluno> curso =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, String.class, "curso");

    public final static io.objectbox.Property<Aluno> faculdade =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, String.class, "faculdade");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Aluno>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        nome,
        curso,
        faculdade
    };

    public final static io.objectbox.Property<Aluno> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Aluno> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Aluno>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Aluno> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Aluno> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Aluno> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class AlunoIdGetter implements IdGetter<Aluno> {
        @Override
        public long getId(Aluno object) {
            return object.id;
        }
    }

}
